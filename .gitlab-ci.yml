# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

###########################################################
# Global - Definir imagem e services global para os demais.
###########################################################

# Definindo a versão da imagem do docker na qual será utilizada.
image: $DOCKER_VERSION

# Docker in Docker.
services:
  - docker:dind

# Lista de estágios para trabalhos e sua ordem de execução 
stages:          
  - build_deploy  # Compilar e Deploy
  - test          # Testar

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

###########################################################
# Back End
###########################################################

# 1. Build e Deploy do Backend.
build-deploy-backend:       # Primeira etapa a ser realizada, compilação do backend.
  stage: build
  before_script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  script:
    - echo "Compilando backend..."
    - docker build -f "./backend/Dockerfile" -t "$DOCKER_HUB_USER/$DOCKER_HUB_BACK:latest" "./backend"
    - echo "Backend compilado."
  after_script:
    - echo "Build do Backend finalizado."
    - echo "Realizando o deploy do backend..."
    - docker push "$DOCKER_HUB_USER/$DOCKER_HUB_BACK:latest"
    - echo "Deploy do backend finalizado."

# 2. Teste(s) do Backend.
test-backend:       # Segunda etapa a ser realizada após a compilação do backend, realizar os testes no backend.
  image: docker/compose:latest
  stage: test
  script:
    - echo "Realizando o(s) teste(s) ao backend..."
    - docker-compose run --entrypoint "npm run unittest" backend
  after_script:
    - echo "Teste(s) finalizado."